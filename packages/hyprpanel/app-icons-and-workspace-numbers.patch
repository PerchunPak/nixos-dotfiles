diff --git a/src/components/bar/modules/kblayout/index.tsx b/src/components/bar/modules/kblayout/index.tsx
index b9b4ddb..9c547bb 100644
--- a/src/components/bar/modules/kblayout/index.tsx
+++ b/src/components/bar/modules/kblayout/index.tsx
@@ -4,17 +4,32 @@ import { Module } from '../../shared/Module';
 import { inputHandler } from 'src/components/bar/utils/helpers';
 import { getKeyboardLayout } from './helpers';
 import { BarBoxChild } from 'src/lib/types/bar';
-import { bind } from 'astal';
+import { bind, Variable } from 'astal';
 import { useHook } from 'src/lib/shared/hookHandler';
 import { Astal } from 'astal/gtk3';
 
 const { label, labelType, icon, leftClick, rightClick, middleClick, scrollUp, scrollDown } =
     options.bar.customModules.kbLayout;
 
+function replaceLangWithIcon(lang: String): String {
+    switch (lang) {
+        case "US":
+            return "ðŸ‡ºðŸ‡¸";
+        case "CZ (Qwerty)":
+            return "ðŸ‡¨ðŸ‡¿"
+        case "UA":
+            return "ðŸ‡ºðŸ‡¦"
+        case "RU":
+            return "ðŸ’©"
+        default:
+            return lang;
+    }
+}
+
 function setLabel(self: Astal.Label): void {
     try {
         const devices = hyprlandService.message('j/devices');
-        self.label = getKeyboardLayout(devices, labelType.get());
+        self.label = replaceLangWithIcon(getKeyboardLayout(devices, labelType.get()));
     } catch (error) {
         console.error(error);
     }
@@ -22,6 +37,7 @@ function setLabel(self: Astal.Label): void {
 
 export const KbInput = (): BarBoxChild => {
     const keyboardModule = Module({
+        showLabel: bind(Variable(true)),
         textIcon: bind(icon),
         tooltipText: '',
         labelHook: (self: Astal.Label): void => {
diff --git a/src/components/bar/modules/workspaces/helpers/utils.ts b/src/components/bar/modules/workspaces/helpers/utils.ts
index 5d2c033..3ce3647 100644
--- a/src/components/bar/modules/workspaces/helpers/utils.ts
+++ b/src/components/bar/modules/workspaces/helpers/utils.ts
@@ -251,7 +251,7 @@ export const renderLabel = (
     monitor: number,
 ): string => {
     if (showAppIcons) {
-        return appIcons;
+        return (workspaceMask ? `${index + 1}` : `${i}`) + " " + appIcons;
     }
 
     if (showIcons) {
